defmodule MyAshPhoenixApp.Blog.Product do
  use Ash.Resource,
    domain: MyAshPhoenixApp.Blog,
    data_layer: AshPostgres.DataLayer

  use Ash.Resource.Validation

  postgres do
    table "products"
    repo MyAshPhoenixApp.Repo
  end

  attributes do
    # Add an autogenerated UUID primary key called `:id`.
    uuid_primary_key :id

    attribute :name, :string do
      allow_nil? false
    end

    attribute :price, :decimal do
      allow_nil? false
    end
  end

  validations do
    validate compare(:price, greater_than_or_equal_to: 10) do
      message "we only sell products above 10 dollars"
    end
  end

  actions do
    defaults [:destroy]

    read :read do
      # prepare build(filter: [price: 100])
      prepare build(sort: [:price])
      # prepare {MyAshPhoenixApp.Preparations.Top5, attribute: :price}
    end

    create :create do
      accept [:name, :price]
    end

    update :update do
      # accept price as input
      accept [:price]
      require_atomic? false
    end

    read :by_id do
      # This action has one argument :id of type :uuid
      argument :id, :uuid, allow_nil?: false
      # Tells us we expect this action to return a single result
      get? true
      # Filters the `:id` given in the argument
      # against the `id` of each element in the resource
      filter expr(id == ^arg(:id))
    end
  end
end
